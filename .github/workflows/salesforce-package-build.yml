name: Salesforce Package Build

on:
  push:
    branches:
      - main

env:
    CUMULUSCI_KEYCHAIN_CLASS: cumulusci.core.keychain.EnvironmentProjectKeychain
    # {"username": "github_username", "token":"github_personal_access_token","email":"email_address"}
    CUMULUSCI_SERVICE_github: ${{ secrets.CUMULUSCI_SERVICE_GITHUB }}
    # sfdx force:org:display --json --verbose -u packaging_org_username
    SFDX_AUTH_URL: ${{ secrets.PACKAGING_ORG_AUTH_URL}}
    # client id from connected app
    SFDX_CLIENT_ID: ${{ secrets.SFDX_CLIENT_ID }}
    # server.key file, needs to be attached to the connected app
    SFDX_HUB_KEY: ${{ secrets.SFDX_HUB_KEY }}
    # username and url for the packaging org
    CUMULUSCI_ORG_packaging: '{"username": "kaylamp04@creative-hawk-tskjq1.com", "instance_url": "https://creative-hawk-tskjq1-dev-ed.trailblaze.my.salesforce.com"}'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install CumulusCI
        run: pip install cumulusci

      - name: Install sfdx
        run: |
          mkdir sfdx
          wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJ -C sfdx --strip-components 1
          ./sfdx/install

      - name: Convert to Metadata API Format
        run: |
          cci task run dx_convert_from

      - name: Deploy to Package Org
        run: |
          echo "SFDX_AUTH_URL: $SFDX_AUTH_URL"
          cci task run deploy --org packaging

      - name: Determine Release Type
        id: release-type
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ "beta" ]]; then
            echo "beta"
          else
            echo "major"
          fi
        continue-on-error: true

      - name: Create Beta Release
        if: steps.release-type.outputs.release-type == 'beta'
        run: |
          cci task run upload_beta --org packaging

      - name: Create Major Release
        if: steps.release-type.outputs.release-type == 'major'
        run: |
          cci task run upload_production --org packaging