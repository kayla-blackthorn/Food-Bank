name: Salesforce Package Build

on:
  workflow_dispatch: {} # Enable manual triggering

env:
    CUMULUSCI_KEYCHAIN_CLASS: cumulusci.core.keychain.EnvironmentProjectKeychain
    CUMULUSCI_SERVICE_github: ${{ secrets.CUMULUSCI_SERVICE_GITHUB }}
    SFDX_AUTH_URL: ${{ secrets.PACKAGING_ORG_AUTH_URL }}
    SFDX_CLIENT_ID: ${{ secrets.SFDX_CLIENT_ID }}
    SFDX_HUB_KEY: ${{ secrets.SFDX_HUB_KEY }}
    CUMULUSCI_ORG_packaging: ${{ secrets.CUMULUSCI_ORG_PACKAGING }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install CumulusCI
        run: pip install cumulusci
      
      - name: Install sfdx
        run: |
          mkdir sfdx
          wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz | tar xJ -C sfdx --strip-components 1
          export PATH="$(pwd)/sfdx/bin"
          echo "$(pwd)/sfdx/bin" >> $GITHUB_PATH

      - name: Convert to Metadata API Format
        run: |
          cci task run dx_convert_from

      - name: Deploy to Package Org
        run: |
          cci task run deploy --org packaging --unmanaged false

      - name: Determine Release Type
        id: release-type
        run: |
          if [[ "${{ vars.BETA_RELEASE }}" == "true" ]]; then
            echo "::set-output name=release-type::beta"
          else
            echo "::set-output name=release-type::major"
          fi
        continue-on-error: true

      - name: Create Beta Release
        if: steps.release-type.outputs.release-type == 'beta'
        run: |
          cci flow run release_beta --org packaging         

      - name: Create Major Release
        if: steps.release-type.outputs.release-type == 'major'
        run: |
          cci flow run release_production --org packaging